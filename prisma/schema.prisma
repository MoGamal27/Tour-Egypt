// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Destination {
  id        Int       @id @default(autoincrement())
  name      String    
  description String?
  attractions Attraction[]
  restaurants Restaurant[]
  hotels Hotel[]
  tourGuides TourGuide[]
  activities Activity[]
}

model Attraction {
  id        Int       @id @default(autoincrement())
  name      String
  location  String?
  destinationId Int
  destination Destination @relation(fields: [destinationId], references: [id])
}

model Restaurant {
  id        Int       @id @default(autoincrement())
  name      String
  location  String?
  destinationId Int
  destination Destination @relation(fields: [destinationId], references: [id])
}

model Hotel {
  id        Int       @id @default(autoincrement())
  name      String
  location  String?
  destinationId Int
  destination Destination @relation(fields: [destinationId], references: [id])
}

model TourGuide {
  id    Int       @id @default(autoincrement())
  name  String
  email String
  phoneNumber String
  password  String
  language String
  Experience String 
  destinationId Int
  rating       Float?
  expertise    String?
  destination Destination @relation(fields: [destinationId], references: [id])
}

model Tourist {
  id          Int      @id @default(autoincrement())
  name        String
  email       String   @unique
  phoneNumber String
  password    String
}
model Category {
  id       Int       @id @default(autoincrement())
  name     String    @unique
 souvenirs Souvenirs[]
}

model Souvenirs {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  price       Float
  category    Category @relation(fields: [categoryId], references: [id])
  categoryId  Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Booking {
  id        Int      @id @default(autoincrement())
  firstName String
  lastName  String
  checkIn   DateTime
  checkOut  DateTime
  adults    Int
  children  Int      @default(0)
  email     String
  phone     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("bookings")
}
model Activity {
  id          Int      @id @default(autoincrement())
  name        String
  location    String
  rating      Float
  price       Float
  description String
  duration    String
  maxPeople   Int
  imageUrl    String
  destinationId Int
  destination Destination @relation(fields: [destinationId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Review {
  id          Int      @id @default(autoincrement())
  comment     String
  rating      Float
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}